# Welcome to your prefect.yaml file! You can use this file for storing and managing
# configuration for deploying your flows. We recommend committing this file to source
# control along with your flow code.

# Generic metadata about this project
name: crypto-streaming-analytics
prefect-version: 3.4.8

# build section allows you to manage and build docker images
build: null

# push section allows you to manage if and how this project is uploaded to remote locations
push: null

# pull section allows you to provide instructions for cloning this project in remote locations
pull:
- prefect.deployments.steps.git_clone:
    repository: https://github.com/Pawan0426/crypto-streaming-analytics.git
    branch: main
    access_token: '{{ prefect.blocks.secret.deployment-hourly-supabase-etl-crypto-etl-supabase-repo-token }}'
- prefect.deployments.steps.run_shell_script:
    script: |
      echo "=== DEBUGGING DEPLOYMENT ==="
      echo "Current working directory: $(pwd)"
      echo "Python version: $(python --version)"
      echo "Pip version: $(pip --version)"
      echo ""
      echo "Files in current directory:"
      ls -la
      echo ""
      echo "Looking for requirements.txt:"
      find . -name "requirements.txt" -type f 2>/dev/null || echo "find command failed"
      echo ""
      echo "Direct file check:"
      if [ -f requirements.txt ]; then
        echo "✓ requirements.txt exists"
        echo "File size: $(wc -c < requirements.txt) bytes"
        echo "File permissions: $(ls -l requirements.txt)"
        echo "Contents:"
        cat requirements.txt
      else
        echo "✗ requirements.txt NOT found"
      fi
      echo "=========================="
- prefect.deployments.steps.pip_install_requirements:
    requirements_file: requirements.txt

# the deployments section allows you to provide configuration for deploying flows
deployments:
- name: Hourly Supabase ETL
  version: null
  tags: []
  concurrency_limit: null
  description: null
  entrypoint: orchestration/prefect_etl_flow.py:crypto_etl_supabase
  parameters: {}
  work_pool:
    name: default
    work_queue_name: null
    job_variables: {}
  schedules:
  - cron: 0 * * * *
    timezone: null
    day_or: true
    active: true